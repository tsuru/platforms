#!/bin/bash -e

# Copyright 2015 tsuru authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

SOURCE_DIR=/var/lib/tsuru
source ${SOURCE_DIR}/base/rc/config

if [ -d ${CURRENT_DIR}/vendor ]; then
    PLATFORM_EXTRA_RSYNC_ARGS=${PLATFORM_EXTRA_RSYNC_ARGS---exclude vendor/bundle}
fi

source ${SOURCE_DIR}/base/deploy

if [ -f ${CURRENT_DIR}/Gemfile.lock ]; then
    RUBY_VERSION=$(awk '/^RUBY VERSION/{getline; gsub(/p[0-9]+/, "", $2); print $2}' ${CURRENT_DIR}/Gemfile.lock || echo "")
fi

if [ -f ${CURRENT_DIR}/.ruby-version -a "${RUBY_VERSION}" == "" ]; then
    RUBY_VERSION=$(cat ${CURRENT_DIR}/.ruby-version)
    if [[ "${RUBY_VERSION}" =~ ([0-9\.]+).* ]]; then
        RUBY_VERSION=${BASH_REMATCH[1]}
    fi
fi

echo "gem: --no-rdoc --no-ri" > ~/.gemrc

RUBY_VERSION=${RUBY_VERSION:-2.7.7}

echo "-- Using ruby version: $RUBY_VERSION --"

RUBY_REPO=${RUBY_REPO:-https://heroku-buildpack-ruby.s3.amazonaws.com/heroku-24}

RUBY_TARGET="$RUBY_REPO/ruby-$RUBY_VERSION.tgz"

# Install Ruby
INSTALL_RUBY=1
if [ -f /home/application/ruby/bin/ruby ]; then
    RUBY_INSTALLED_VERSION=$(/home/application/ruby/bin/ruby -e 'puts RUBY_VERSION')
    if [ "${RUBY_INSTALLED_VERSION}" != "${RUBY_VERSION}" ]; then
        INSTALL_RUBY=1
    else
        INSTALL_RUBY=0
    fi
fi

function get_bundler_version() {
    ruby_version=$1
    if [ -f ${CURRENT_DIR}/Gemfile.lock ]; then
        bundler_version=$(cat ${CURRENT_DIR}/Gemfile.lock | grep -A1 "BUNDLED WITH" | grep -v "BUNDLED WITH" | tr -d " ")
        if [ "$bundler_version" != "" ]; then
            echo $bundler_version
            return
        fi
    fi
    if [ "$(printf "%s\n%s" "$ruby_version" "2.6.0" | sort -V | head -n 1)" = "2.6.0" ]; then
        echo ""
        return
    fi
    echo ">2"
}

if [ "$INSTALL_RUBY" == "1" ]; then
    mkdir -p "/home/application/ruby"
    echo "-- Fetching ruby from: $RUBY_TARGET --"
    if ! (curl -s --retry 3 -L "$RUBY_TARGET" | tar xz -C "/home/application/ruby"); then
        echo "ERROR: ruby version $RUBY_VERSION is not supported."
        if [ ! -z "$SUPPORTED_VERSIONS" ]; then
            echo "Supported versions are: $SUPPORTED_VERSIONS"
        fi
        exit 1
    fi
fi

BUNDLER_VERSION=$(get_bundler_version $RUBY_VERSION)
if [ "$BUNDLER_VERSION" != "" ]; then
    if [ -z "$GEM_SOURCE" ]; then
        gem install bundler --force -v "$BUNDLER_VERSION"
    else
        echo "-- Using $GEM_SOURCE as remote gem source --"
        gem install --clear-sources --force --source=$GEM_SOURCE bundler -v "$BUNDLER_VERSION"
    fi
fi

if [ -f ${CURRENT_DIR}/Gemfile ]; then
    if [ ! -z "$GEM_SOURCE" ]; then
        sed -i "s,https\?://rubygems.org/\?,$GEM_SOURCE," ${CURRENT_DIR}/Gemfile
        if [ -f ${CURRENT_DIR}/Gemfile.lock ]; then
            sed -i "s,https\?://rubygems.org/\?,$GEM_SOURCE," ${CURRENT_DIR}/Gemfile.lock
        fi
    fi
    pushd $CURRENT_DIR && bundle install --deployment --without ${BUNDLE_WITHOUT-development:test}
    popd
fi
