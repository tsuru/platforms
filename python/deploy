#!/bin/bash -el

# Copyright 2015 tsuru authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

SOURCE_DIR=/var/lib/tsuru
source ${SOURCE_DIR}/base/deploy
source ${SOURCE_DIR}/base/rc/config

#find apps python version
python_version_default="2.7.14"
version_origin="default"

if [ -n "${PYTHON_VERSION}" ]; then
    version_origin="PYTHON_VERSION environment variable"
else
    PYTHON_VERSION="${python_version_default}"
fi

if [ -f "${CURRENT_DIR}/.python-version" ]; then
    tmp_version=$(cat "${CURRENT_DIR}/.python-version")
    if [ -n "${tmp_version}" ]; then
        PYTHON_VERSION=${tmp_version}
        version_origin=".python-version file"
    fi
fi

if ! pyenv versions | grep -E " ${PYTHON_VERSION}(\s|$)" >/dev/null; then
    echo "Python version '${PYTHON_VERSION}' (${version_origin}) is not supported."
    echo "Valid python versions are:"
    pyenv versions --skip-aliases --bare | grep -v "/env"
    case $PYTHON_VERSION in
        3.6*)
            PYTHON_VERSION="3.6.4"
            ;;
        3.5*)
            PYTHON_VERSION="3.5.4"
            ;;
        *)
            PYTHON_VERSION=${python_version_default}
    esac
    version_origin="default"
fi

echo "-- Using python version: ${PYTHON_VERSION} (${version_origin}) --"

APP_VENV="app_env_${PYTHON_VERSION}"

# Create a app env if needed (with correct python version)
if [ ! -e "${PYENV_ROOT}/versions/$APP_VENV" ]; then
    pyenv virtualenv "${PYTHON_VERSION}" "${APP_VENV}"
fi

# install projects deps with pip
pushd "$CURRENT_DIR"

if [ -f "${CURRENT_DIR}/.python-version" ]; then
    mv "${CURRENT_DIR}/.python-version" "${CURRENT_DIR}/.python-version.tsuru.original"
fi

pyenv global $APP_VENV

if [ -f "${CURRENT_DIR}/Pipfile.lock" ]; then
    echo "Pipfile.lock detected, using 'pipenv install --system --deploy' to install dependencies"
    pip install pipenv
    pipenv install --system --deploy
    pyenv rehash
elif [ -f "${CURRENT_DIR}/requirements.txt" ]; then
    echo "requirements.txt detected, using 'pip install -r ./requirements.txt' to install dependencies"
    pip install -r ./requirements.txt
elif [ -f "${CURRENT_DIR}/setup.py" ]; then
    echo "setup.py detected, using 'pip install -e .' to install dependencies"
    pip install -e .
fi
popd
